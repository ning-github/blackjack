// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

window.Game = (function(superClass) {
  extend(Game, superClass);

  function Game() {
    return Game.__super__.constructor.apply(this, arguments);
  }

  Game.prototype.initialize = function(playerHand, dealerHand) {
    this.playerHand = playerHand;
    this.dealerHand = dealerHand;
    return this.get('playerHand').on('add', this.checkPlayerScore, this);
  };

  Game.prototype.checkPlayerScore = function() {
    var handScores;
    handScores = this.get('playerHand').scores();
    if (handScores[0] === 21 || handScores[1] === 21) {
      console.log('win');
      return this.trigger('win');
    } else if (Math.min.apply(null, handScores) > 21) {
      console.log('busted');
      return this.trigger('busted');
    }
  };

  return Game;

})(Backbone.Model);
